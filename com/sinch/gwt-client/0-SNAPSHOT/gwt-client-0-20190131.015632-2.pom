<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sinch</groupId>
  <artifactId>gwt-client</artifactId>
  <version>0-SNAPSHOT</version>
  <packaging>jar</packaging>
  
	<name>sinch-gwt-client</name>
	<description>GWT API for the Sinch Client</description>
	<inceptionYear>2018</inceptionYear>

	<properties>
		<!--Trick to deploy releases (using mvn release:perform) to the local file 
			system. The release is actually performed from target/checkout, which is 
			why we need those ../../ . Notice that after deployment, you should commit 
			and push to the git repository. -->
		<altDeploymentRepository>release-repo::default::file:../../releases</altDeploymentRepository>
		<!-- Compiler properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- GWT version -->
		<gwt.version>2.8.0</gwt.version>
		<gwt.maven.version>2.8.0-rc3</gwt.maven.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
    	<github.global.server>github</github.global.server>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jsfunction</groupId>
			<artifactId>jsfunction-gwt-main</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- Include GwtSinchClient.gwt.xml -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.java</include>
					<include>**/*.properties</include>
					<include>**/*.gwt.xml</include>
					<include>**/*.js</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.maven.version}</version>
			</plugin>
			<plugin>
			    <artifactId>maven-deploy-plugin</artifactId>
			    <version>2.7</version>
			    <configuration>
			        <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
			    </configuration>
			</plugin>	  
        	<!--<plugin>-->
	            <!--<groupId>com.github.github</groupId>-->
	            <!--<artifactId>site-maven-plugin</artifactId>-->
	            <!--<version>0.8</version>-->
	            <!--<configuration>-->
	                <!--<message>Maven artifacts for ${project.version}</message>  &lt;!&ndash; git commit message &ndash;&gt;-->
	                <!--<noJekyll>true</noJekyll>                                  &lt;!&ndash; disable webpage processing &ndash;&gt;-->
	                <!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> &lt;!&ndash; matches distribution management repository url above &ndash;&gt;-->
	                <!--<branch>refs/heads/mvn-repo</branch>                       &lt;!&ndash; remote branch name &ndash;&gt;-->
	                <!--<includes><include>**/*</include></includes>-->
	                <!--<repositoryName>sinch-gwt-client</repositoryName>      	&lt;!&ndash; github repo name &ndash;&gt;-->
	                <!--<repositoryOwner>kerbymart</repositoryOwner>    &lt;!&ndash; github username  &ndash;&gt;-->
	            <!--</configuration>-->
	            <!--<executions>-->
	              <!--&lt;!&ndash; run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase &ndash;&gt;-->
	              <!--<execution>-->
	                <!--<goals>-->
	                  <!--<goal>site</goal>-->
	                <!--</goals>-->
	                <!--<phase>deploy</phase>-->
	              <!--</execution>-->
	            <!--</executions>-->
        	<!--</plugin>		                -->
            <!-- Default plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<useReleaseProfile>false</useReleaseProfile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.source}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>divroll-github-repo</id>
			<url>https://raw.githubusercontent.com/divroll/repo/master/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>internal</id>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>
</project>
